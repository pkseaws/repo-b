name: Unified Build and Deployment

on:
  workflow_call:
    inputs:
      language:
        required: false
        type: string
      env:
        required: false
        type: string
      upload_artifact:
        required: true
        type: boolean
      terraform_dir:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up version
        run: echo "BUILD_VERSION=1.0.${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build Java
        if: inputs.language == 'java'
        uses: pkseaws/repo-b/build/build-java@main
        with:
          working-directory: java

      - name: Build Python
        if: inputs.language == 'python'
        uses: pkseaws/repo-b/build/build-python@main
        with:
          working-directory: python
 

  deploy-upload:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Set up version
          run: echo "BUILD_VERSION=1.0.${{ github.run_number }}" >> $GITHUB_ENV
        - name: Deploy
          run: |
              echo "Deploying ${{ inputs.language }} app to ${{ inputs.env }}"
              #cat config/${{ inputs.env }}-config.json
              chmod +x scripts/*.sh
              sh scripts/sample-script.sh
              sh scripts/deploy-env.sh ${{ inputs.env }}
        - name: Upload Artifact
          if: inputs.upload_artifact == true
          uses: pkseaws/repo-b/upload-artifact@main
          with:
           name: ${{ inputs.language }}-artifact
           path: ${{ inputs.language }}/
           #path: artifact-repo
           env: ${{ inputs.env }}
           version: ${{ env.BUILD_VERSION }}
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Terraform
        uses: pkseaws/repo-b/terraform@main
        with:
         working-directory: terraform
        env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      

     
